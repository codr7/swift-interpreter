* add ArrayRef like HashRef

* convert parentType to parentTypes array

* add support for ref closures

function foo(x:Int):Function (
  function bar(y:Int):Int 
    x.+ y
  &bar
)
call foo 42 [3]

* add Hash upsert

foo(lookup:Hash):Hash (
  lookup.insert "foo" 1
  lookup.upsert "foo" 0 _.+1
  lookup.upsert "bar" 3 _.+1
)
---

swift run -c release

function fib1(n:Int):Int 
  if n.< 2 n else (fib1 n.- 1).+ fib1 n.- 2 
benchmark 100 fib1 20

1.814317117

function fib2(n:Int a:Int b:Int):Int 
  if n.> 1 return fib2 n.- 1 b a.+ b else if n.= 0 a else b 
benchmark 10000 fib2 70 0 1

0.624275309

function fib3(n:Int lookup:Hash):Int
  lookup.get-insert n if n.< 2 n else (fib3 n.- 1 lookup).+ fib3 n.- 2 lookup 
benchmark 10000 fib3 70 {}

1.649630514

