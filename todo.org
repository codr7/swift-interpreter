* add dot calls to all reader parts
* move stack to eval parameter in all parts
* cache constant stack suffix in call ops
** benchmark
* add queue type
** add task producer/consumer example
* split value cast into cast/safeCast in part7
** benchmark
** backport

swift run -c release

function fib1(n:Int):Int if < n 2 n else + fib1 - n 1 fib1 - n 2 benchmark 100 fib1 20
2.898292418 
3.940976014 arg type check
3.330264671 emit type check
3.15372856

function fib2(n:Int a:Int b:Int):Int if > n 1 return fib2 - n 1 b + a b else if = n 0 a else b benchmark 10000 fib2 70 0 1
0.840631962 
1.174382059 arg type check
0.985196169 emit type check
0.912444318 seconds
