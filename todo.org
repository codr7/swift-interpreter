* finish check macro
** port to part7
** add tests from todo
** commit

* inc pc in stop op, part1-4

* fib3
** add HashMap type from part 6
** add ValueType.hash func
** add get-set function
** add python benchmark

* add support for ref closures

function foo(x:Int):Function (
  function bar(y:Int):Int 
    x.+ y
  &bar
)
call foo 42 [3]

---

swift run -c release

function fib1(n:Int):Int 
  if n.< 2 n else (fib1 n.- 1).+ fib1 n.- 2 
benchmark 100 fib1 20

1.46366123

function fib2(n:Int a:Int b:Int):Int 
  if n.> 1 return fib2 n.- 1 b a.+ b else if n.= 0 a else b 
benchmark 10000 fib2 70 0 1

0.572912145

function fib3(n:Int lookup:HashMap):Int
  get-set lookup n if n.< 2 n else (fib3 n.- 1 lookup).+ fib3 n.- 2 lookup 
benchmark 100 fib3 20 {}

--

define foo + 1 2
evaluate + 1 2

--

function foo(x:Int):Int (
  function bar(y:Int):Int
    + x y
  bar 42
)
foo 3

--

function foo(x:Int):Function
  function(y:Int):Int 
    x.+ y

call foo 42 [3]
