check true 42.= 42
check true 1.< 3
check false 1.> 3

check 3 1.+ 2

check 3 (1 _.+ 2)

check Int 42.type
check true 42.is Int
check true Int.is Meta

check 3 evaluate 1.+ 2

check 3 (
  define foo 1.+ 2
  foo
)

check 42 (
  function foo():Int
    42
  foo
)

check 55 (
  function fib(n:Int):Int 
    if n.< 2 n else (fib n.- 1).+ fib n.- 2    
  fib 10
)

check 55 (
  function fib(n:Int a:Int b:Int):Int 
    if n.> 1 return fib n.- 1 b a.+ b else if n.= 0 a else b    
  fib 10 0 1
)

check 55 (
  function fib(n:Int lookup:Hash):Int
    lookup.get-insert n if n.< 2 n else (fib n.- 1 lookup).+ fib n.- 2 lookup 
  fib 10 {}
)

check 45 (
  function foo(x:Int):Int (
    function bar(y:Int):Int
      + x y
    bar 42
  )
  foo 3
)

check 45 (
  function foo(x:Int):Function
    function(y:Int):Int 
      x.+ y
  call foo 42 [3]
)